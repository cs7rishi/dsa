*** Initial Trie Code ***
class Trie {
    Node root;
    public Trie() {
        root = new Node();
    }
    
    public void insert(String word) {
        Node temp = root;
        for(char ch : word.toCharArray()){
            if(!temp.containsKey(ch)){
                temp.putKey(ch, new Node());
            }
            
            temp = temp.getKey(ch);
        }

        temp.setEnd();
    }
    
    public boolean search(String word) {
        Node temp = root;
        for(char ch : word.toCharArray()){
            if(!temp.containsKey(ch)) return false;

            temp = temp.getKey(ch);
        }

        return temp.isEnd();
    }
    
    public boolean startsWith(String prefix) {
        Node temp = root;
        for(char ch : prefix.toCharArray()){
            if(!temp.containsKey(ch)) return false;

            temp = temp.getKey(ch);
        }

        return true;
    }

    class Node{
        Node[] links;
        boolean isEnd;

        Node(){
            links = new Node[26];
            isEnd = false;
        }

        boolean containsKey(char ch){
            return links[ch-'a'] != null;
        }

        Node getKey(char ch){
            return links[ch-'a'];
        }

        void putKey(char ch, Node node){
            links[ch-'a'] = node;
        }

        boolean isEnd(){
            return isEnd;
        }

        void setEnd(){
            isEnd = true;
        }
    }
}

/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.insert(word);
 * boolean param_2 = obj.search(word);
 * boolean param_3 = obj.startsWith(prefix);
 */