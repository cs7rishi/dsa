1. Bit Manipulation || MEDIUM || *

    static void bitManipulation(int num, int i) {
        int t = 0;
        if((num & (1<<(i-1))) != 0) t = 1;
        System.out.print(t + " ");
        
        t = (num | (1 << (i-1)));
        System.out.print(t + " ");
        
        t = (num & ~(1 << (i-1)));
        System.out.print(t + " ");
    }

2. K-th Bit is Set or Not
    static boolean checkKthBit(int n, int k) {
        return (n & (1 << (k))) != 0 ? true : false;
        
    }

3.Odd or Even || EASY
    static String oddEven(int n) {
        return (n&1) == 1 ? "odd" : "even";
    }

4. Power of Two || EASY || *
    public boolean isPowerOfTwo(int n) {
        if(n <= 0) return false;
        return (n & (n-1)) == 0 ? true : false;

    }

5. Count total set bits


6. Set the rightmost unset bit || EASY
    static int setBit(int n) {
        int k = 1;
        while((n & (1<<(k-1))) != 0){
            k++;
        }
        return (n | (1<<(k-1)));
    }

7. Swap two numbers || EASY || *
    static List<Integer> get(int a,int b)
    {
        a = a^b;
        b = a^b;
        a = a^b;
        return new ArrayList<>(List.of(a,b));
    }

8. Minimum Bit Flips to Convert Number || EASY || *
TC: O(log(max(start,goal)))
SC: O(1)
    public int minBitFlips(int start, int goal) {
        int xor = start ^ goal;
        int k = 1;
        int count = 0;
        while(xor >= (1 << (k-1))){
            if((xor & (1 << (k-1))) != 0) count++;
            k++;
        }
        return count;       
    }