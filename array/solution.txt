1. Largest Element in Array
class Solution {
    public static int largest(int[] arr) {
        // code here
        int mx = Integer.MIN_VALUE;
        for(int t : arr) mx = Math.max(t,mx);
        return mx
    }
}


##### Medium ######
1.Two Sum

1.a TC: N^2
    SC: 0(1)

class Solution {
    public int[] twoSum(int[] nums, int target) {
        for(int i = 0 ; i < nums.length; i++){
            for(int j = i + 1 ; j < nums.length; j++){
                if(nums[i] + nums[j] == target) return new int[]{i,j};
            }
        }

        return new int[]{};
    }
}

1.b TC : O(n)
    SC : O(n)

class Solution {
    public int[] twoSum(int[] nums, int target) {
        //Integer,Index
        Map<Integer,Integer> mp = new HashMap<>();
        for(int i = 0 ; i < nums.length; i++){
            int required = target - nums[i];
            if(mp.containsKey(required)){
                return new int[]{mp.get(required),i};
            }

            mp.put(nums[i],i);
        }

        return new int[]{};
    }
}

2. Sort Colors
0.... low - 1 => 0
low ..... mid-1 => 1
high+1 .....n-1 => 2
 class Solution {
    private void swap(int[] nums, int i , int j){
        int t = nums[i];
        nums[i] = nums[j];
        nums[j] = t;
    }
    public void sortColors(int[] nums) {
        int low = -1;
        int mid = 0;
        int high = nums.length-1;

        while(mid <= high){
            if(nums[mid] == 0){
                low++;
                swap(nums,low,mid);
                mid++;
            }else if(nums[mid] == 1){
                mid++;
            }else{
                swap(nums, mid, high);
                high--;
            }
        }

        System.out.println(Arrays.toString(nums));
    }
}

3.Majority Element
class Solution {
    public int majorityElement(int[] nums) {
        int ele = 0;
        int count = 0;

        for(int t : nums){
            if(count == 0){
                ele = t;
                count = 1;
            }else{
                if(ele == t){
                    count++;
                }else{
                    count--;
                }
            }
        }
        return ele;
    }
}